/*
ID: fzhpand1
PROG: dualpal
LANG: C++
*/
#include<iostream>
#include<vector>
#include<fstream>
#include<math.h>
using namespace std;

void change_base(int j, int N, string& pal,char base[])
{
	int i=0;
	while(j!=0)
	{
	   int tmp = j%N;
	   //pal.push_back(base[tmp]);  
	   pal.insert(pal.begin(),base[tmp]);
	   //cout<<tmp<<endl;
	   //cout<<pal<<endl;
	   j = j/N;
	   i++; 

	}

}

int pal_test(string& pal)
{
	int len = pal.size();
	int i= 0;
	while(i<=len-i-1)
	{
	    if(pal[i] != pal[len-i-1]) return 0;
	    i++;

	}
	return 1;
}

int main()
{
	ifstream d1("dualpal.in");
	int N,S;
	d1>>N>>S;
	d1.close();
	
	char base[20];

	for(int i=0;i<15;i++) 
	{
	   if(i<10)
	   base[i] = '0' + i; //cout<<base[i]<<endl; }
	   else base[i] = 'A' + i-10;
	//   cout<<"base["<<i<<"] = "<<base[i]<<endl;
	}
	
	ofstream d2("dualpal.out");
	
	vector<int> result;
	S++;
	while(result.size()<N)
	{
	   int k=0;
	   for(int i=2;i<11;i++)
	   {
	   
		string pal;
		
	      	change_base(S,i,pal,base);
	   	if(pal_test(pal) == 1) 
	   	{ 
		   k++;
	  	}
		if(k==2) {result.push_back(S); 
			break;}
	   }
	   S++;
	}
	for(int i=0;i<result.size();i++) d2<<result[i]<<endl;
	d2.close();
	return 0;

}

