/*
ID: fzhpand1
PROG: palsquare
LANG: C++
*/
#include<iostream>
#include<fstream>
#include<math.h>
using namespace std;

void change_base(int j, int N, string& pal,char base[])
{
	int i=0;
	while(j!=0)
	{
	   int tmp = j%N;
	   //pal.push_back(base[tmp]);  
	   pal.insert(pal.begin(),base[tmp]);
	   //cout<<tmp<<endl;
	   //cout<<pal<<endl;
	   j = j/N;
	   i++; 

	}

}

int pal_test(string& pal)
{
	int len = pal.size();
	int i= 0;
	while(i<=len-i-1)
	{
	    if(pal[i] != pal[len-i-1]) return 0;
	    i++;

	}
	return 1;
}

int main()
{
	ifstream d1("palsquare.in");
	int N;
	d1>>N;
	d1.close();
	
	char base[20];

	for(int i=0;i<20;i++) 
	{
	   if(i<10)
	   base[i] = '0' + i; //cout<<base[i]<<endl; }
	   else base[i] = 'A' + i-10;
	//   cout<<"base["<<i<<"] = "<<base[i]<<endl;
	}
	
	ofstream d2("palsquare.out");
	for(int i=1;i<301;i++)
	{
	   int j = pow(i,2);
	   string pal,pal1;
	   change_base(j,N,pal,base);
	   if(pal_test(pal) == 1) 
	   { 
		change_base(i,N,pal1,base);
		d2<<pal1<<" "<<pal<<endl;
	   }

	}
	d2.close();
	return 0;

}

